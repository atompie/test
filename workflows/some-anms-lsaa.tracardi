{
  "id": "8765b95c-e37e-428a-8164-40782b620be8",
  "name": "test",
  "production": false,
  "running": false,
  "timestamp": "2024-03-25T19:18:03",
  "deploy_timestamp": null,
  "description": "",
  "tags": [
    "General"
  ],
  "file_name": null,
  "draft": {
    "id": "8765b95c-e37e-428a-8164-40782b620be8",
    "lock": false,
    "name": "some anms LSAa & ",
    "tags": [
      "General"
    ],
    "type": "collection",
    "response": {},
    "file_name": null,
    "flowGraph": {
      "edges": [
        {
          "id": "81cd0bcfd9fa6a5ce56995f9c7f8b249",
          "data": {
            "name": ""
          },
          "type": "",
          "source": "38f5edfe-f67b-4475-8e48-976a36e44736",
          "target": "f9b0aa66-f7a8-4969-97bc-f52b0a095971",
          "sourceHandle": "payload",
          "targetHandle": "payload"
        },
        {
          "id": "4439cc3a77fbc5b0fd2f1edf9cc06357",
          "data": {
            "name": ""
          },
          "type": "",
          "source": "38f5edfe-f67b-4475-8e48-976a36e44736",
          "target": "45c2bb3d-de4f-442e-878d-0416476451ee",
          "sourceHandle": "payload",
          "targetHandle": "payload"
        }
      ],
      "nodes": [
        {
          "id": "38f5edfe-f67b-4475-8e48-976a36e44736",
          "data": {
            "spec": {
              "id": "5ada67fa006690e709ac790a1fcd9882",
              "form": {
                "title": null,
                "groups": [
                  {
                    "name": null,
                    "fields": [
                      {
                        "id": "event_types",
                        "name": "Accept only the following event types",
                        "required": false,
                        "component": {
                          "type": "eventTypes",
                          "props": {
                            "label": "Event types"
                          }
                        },
                        "validation": null,
                        "description": "This node will start the workflow only if the defined below event-types are consumed. If left empty the node will trigger regardless of the event-type and all the events will be accepted. To add none-existing event-type, type its name and press ENTER."
                      },
                      {
                        "id": "debug",
                        "name": "Collect debugging information",
                        "required": false,
                        "component": {
                          "type": "bool",
                          "props": {
                            "label": "Collect debugging information"
                          }
                        },
                        "validation": null,
                        "description": "Set if you want to collect debugging information. Debugging collects a lot of data if you no longer need to test your workflow disable it to save data and compute power."
                      }
                    ],
                    "description": null
                  },
                  {
                    "name": "Debugging configuration",
                    "fields": [
                      {
                        "id": "event_id",
                        "name": "Event ID",
                        "required": false,
                        "component": {
                          "type": "text",
                          "props": {
                            "label": "Event ID"
                          }
                        },
                        "validation": null,
                        "description": "Define event id. It may match the event that exists in database. If left empty random id will be generated."
                      },
                      {
                        "id": "event_type",
                        "name": "Event type",
                        "required": false,
                        "component": {
                          "type": "eventType",
                          "props": {
                            "label": "Event type",
                            "onlyValueWithOptions": false
                          }
                        },
                        "validation": null,
                        "description": "Define event type. It may match the event that exists in database. If left empty then @debug-event-type will be defined."
                      },
                      {
                        "id": "properties",
                        "name": "Event properties",
                        "required": false,
                        "component": {
                          "type": "json",
                          "props": {
                            "label": "Event types"
                          }
                        },
                        "validation": null,
                        "description": "You can manually specify event properties for debug purpose. Works only for auto-generated events (does not work with the options below)."
                      },
                      {
                        "id": "profile_id",
                        "name": "Profile ID",
                        "required": false,
                        "component": {
                          "type": "text",
                          "props": {
                            "label": "Profile ID"
                          }
                        },
                        "validation": null,
                        "description": "Define profile id. It may match the event that exists in database. If left empty random id will be generated."
                      },
                      {
                        "id": "session_id",
                        "name": "Session ID",
                        "required": false,
                        "component": {
                          "type": "text",
                          "props": {
                            "label": "Session ID"
                          }
                        },
                        "validation": null,
                        "description": "Define session id. It may match the event that exists in database. If left empty random id will be generated."
                      }
                    ],
                    "description": "In debug mode the following event will be injected into workflow."
                  }
                ],
                "submit": null,
                "default": {}
              },
              "init": {
                "debug": false,
                "event_id": null,
                "event_type": {
                  "id": "",
                  "name": ""
                },
                "profile_id": null,
                "properties": "{}",
                "session_id": null,
                "event_types": []
              },
              "node": {
                "on_create": null,
                "on_remove": null
              },
              "skip": false,
              "author": "Risto Kowaczewski",
              "inputs": [],
              "manual": "start_action",
              "module": "tracardi.process_engine.action.v1.flow.start.start_action",
              "license": "MIT + CC",
              "outputs": [
                "payload"
              ],
              "version": "0.8.0",
              "run_once": {
                "ttl": 0,
                "type": "value",
                "value": "",
                "enabled": false
              },
              "className": "StartAction",
              "block_flow": false,
              "microservice": {
                "plugin": {
                  "id": "",
                  "name": "",
                  "resource": {}
                },
                "server": {
                  "resource": {
                    "id": "",
                    "name": ""
                  },
                  "credentials": {
                    "test": {},
                    "production": {}
                  }
                },
                "service": {
                  "id": "",
                  "name": ""
                }
              },
              "on_error_continue": false,
              "run_in_background": false,
              "join_input_payload": false,
              "append_input_payload": false,
              "on_connection_error_repeat": 1
            },
            "debug": false,
            "start": true,
            "metadata": {
              "pro": false,
              "desc": "Starts workflow and returns event data on payload port.",
              "icon": "event",
              "name": "Start",
              "tags": [],
              "type": "startNode",
              "brand": "Tracardi",
              "group": [
                "Flow"
              ],
              "width": 200,
              "height": 200,
              "remote": false,
              "purpose": [
                "collection"
              ],
              "frontend": false,
              "keywords": [
                "start node"
              ],
              "commercial": false,
              "emits_event": {},
              "documentation": {
                "inputs": {},
                "outputs": {
                  "payload": {
                    "desc": "This port returns empty payload object."
                  }
                },
                "tutorial": null
              }
            }
          },
          "type": "startNode",
          "position": {
            "x": 306.0,
            "y": 64.96665954589844
          }
        },
        {
          "id": "f9b0aa66-f7a8-4969-97bc-f52b0a095971",
          "data": {
            "spec": {
              "id": "01e502a4ba981b5b1d454b478a3c49a9",
              "form": {
                "title": null,
                "groups": [
                  {
                    "name": "Calculations",
                    "fields": [
                      {
                        "id": "calc_dsl",
                        "name": "Calculation equations",
                        "required": false,
                        "component": {
                          "type": "textarea",
                          "props": {
                            "label": "Calculations"
                          }
                        },
                        "validation": null,
                        "description": "One calculation per line. Example: profile@aux.counters.my_count = profile@aaux.visits + 1"
                      }
                    ],
                    "description": "Calculations are made in a simple domain specific language. See documentation for details."
                  }
                ],
                "submit": null,
                "default": {}
              },
              "init": {
                "calc_dsl": ""
              },
              "node": {
                "on_create": null,
                "on_remove": null
              },
              "skip": false,
              "author": "Risto Kowaczewski",
              "inputs": [
                "payload"
              ],
              "manual": "calculator_action",
              "module": "tracardi.process_engine.action.v1.calculator_action",
              "license": "MIT + CC",
              "outputs": [
                "payload"
              ],
              "version": "0.8.2",
              "run_once": {
                "ttl": 0,
                "type": "value",
                "value": "",
                "enabled": false
              },
              "className": "CalculatorAction",
              "block_flow": false,
              "microservice": {
                "plugin": {
                  "id": "",
                  "name": "",
                  "resource": {}
                },
                "server": {
                  "resource": {
                    "id": "",
                    "name": ""
                  },
                  "credentials": {
                    "test": {},
                    "production": {}
                  }
                },
                "service": {
                  "id": "",
                  "name": ""
                }
              },
              "on_error_continue": false,
              "run_in_background": false,
              "join_input_payload": false,
              "append_input_payload": false,
              "on_connection_error_repeat": 1
            },
            "debug": false,
            "start": false,
            "metadata": {
              "pro": false,
              "desc": "Calculates new values. Adds, subtracts, divides, and multiplies values.",
              "icon": "calculator",
              "name": "Calculator",
              "tags": [],
              "type": "flowNode",
              "brand": "Tracardi",
              "group": [
                "Data processing"
              ],
              "width": 300,
              "height": 100,
              "remote": false,
              "purpose": [
                "collection",
                "segmentation"
              ],
              "frontend": false,
              "keywords": [
                "math"
              ],
              "commercial": false,
              "emits_event": {},
              "documentation": {
                "inputs": {
                  "payload": {
                    "desc": "This port takes payload object."
                  }
                },
                "outputs": {
                  "payload": {
                    "desc": "Returns result of calculations."
                  }
                },
                "tutorial": null
              }
            }
          },
          "type": "flowNode",
          "position": {
            "x": 327.0,
            "y": 251.1666717529297
          }
        },
        {
          "id": "945f476b-7016-4e1e-972d-a61cf6a88e89",
          "data": {
            "spec": {
              "id": "0ed7d3077c83e45913e042729811355b",
              "form": {
                "title": null,
                "groups": [
                  {
                    "name": "Copy data",
                    "fields": [
                      {
                        "id": "traits",
                        "name": "Define the copy/set actions",
                        "required": false,
                        "component": {
                          "type": "copyTraitsInput",
                          "props": {
                            "actions": {
                              "set": "Set to"
                            },
                            "defaultAction": "set",
                            "defaultSource": "event@properties",
                            "defaultTarget": "profile@traits"
                          }
                        },
                        "validation": null,
                        "description": "Provide source and target data along with action you would like to perform."
                      }
                    ],
                    "description": null
                  }
                ],
                "submit": null,
                "default": {}
              },
              "init": {
                "traits": {
                  "set": {}
                }
              },
              "node": {
                "on_create": null,
                "on_remove": null
              },
              "skip": false,
              "author": "Risto Kowaczewski",
              "inputs": [
                "payload"
              ],
              "manual": "copy_data",
              "module": "tracardi.process_engine.action.v1.traits.copy_trait_action",
              "license": "MIT + CC",
              "outputs": [
                "payload",
                "error"
              ],
              "version": "0.8.2",
              "run_once": {
                "ttl": 0,
                "type": "value",
                "value": "",
                "enabled": false
              },
              "className": "CopyTraitAction",
              "block_flow": false,
              "microservice": {
                "plugin": {
                  "id": "",
                  "name": "",
                  "resource": {}
                },
                "server": {
                  "resource": {
                    "id": "",
                    "name": ""
                  },
                  "credentials": {
                    "test": {},
                    "production": {}
                  }
                },
                "service": {
                  "id": "",
                  "name": ""
                }
              },
              "on_error_continue": false,
              "run_in_background": false,
              "join_input_payload": false,
              "append_input_payload": false,
              "on_connection_error_repeat": 1
            },
            "debug": false,
            "start": false,
            "metadata": {
              "pro": false,
              "desc": "Copy event property to profile trait. This plugin copies event properties to defined destination.",
              "icon": "copy",
              "name": "Copy data",
              "tags": [
                "profile",
                "event",
                "traits",
                "memory",
                "reference",
                "data",
                "read",
                "copy",
                "properties"
              ],
              "type": "flowNode",
              "brand": "Tracardi",
              "group": [
                "Data processing"
              ],
              "width": 300,
              "height": 100,
              "remote": false,
              "purpose": [
                "collection",
                "segmentation"
              ],
              "frontend": false,
              "keywords": [],
              "commercial": false,
              "emits_event": {},
              "documentation": {
                "inputs": {
                  "payload": {
                    "desc": "This port takes any JSON-like object."
                  }
                },
                "outputs": {
                  "payload": {
                    "desc": "This port returns given payload modified according to configuration."
                  }
                },
                "tutorial": null
              }
            }
          },
          "type": "flowNode",
          "position": {
            "x": 123.0,
            "y": 76.16667175292969
          }
        },
        {
          "id": "45c2bb3d-de4f-442e-878d-0416476451ee",
          "data": {
            "spec": {
              "id": "5ea4ba23181b36febce3428924b56f6b",
              "form": null,
              "init": {
                "append": {
                  "target1": "source1",
                  "target2": "source2"
                },
                "remove": {
                  "target": [
                    "item1",
                    "item2"
                  ]
                }
              },
              "node": {
                "on_create": null,
                "on_remove": null
              },
              "skip": false,
              "author": "Risto Kowaczewski",
              "inputs": [
                "payload"
              ],
              "manual": "append_remove_trait_action",
              "module": "tracardi.process_engine.action.v1.traits.append_trait_action",
              "license": "MIT + CC",
              "outputs": [
                "payload",
                "error"
              ],
              "version": "0.1",
              "run_once": {
                "ttl": 0,
                "type": "value",
                "value": "",
                "enabled": false
              },
              "className": "AppendTraitAction",
              "block_flow": false,
              "microservice": {
                "plugin": {
                  "id": "",
                  "name": "",
                  "resource": {}
                },
                "server": {
                  "resource": {
                    "id": "",
                    "name": ""
                  },
                  "credentials": {
                    "test": {},
                    "production": {}
                  }
                },
                "service": {
                  "id": "",
                  "name": ""
                }
              },
              "on_error_continue": false,
              "run_in_background": false,
              "join_input_payload": false,
              "append_input_payload": false,
              "on_connection_error_repeat": 1
            },
            "debug": false,
            "start": false,
            "metadata": {
              "pro": false,
              "desc": "Appends/Removes trait to/from given destination",
              "icon": "append",
              "name": "Append/Remove data",
              "tags": [
                "traits",
                "profile",
                "reference",
                "data"
              ],
              "type": "flowNode",
              "brand": "Tracardi",
              "group": [
                "Data processing"
              ],
              "width": 300,
              "height": 100,
              "remote": false,
              "purpose": [
                "collection"
              ],
              "frontend": false,
              "keywords": [],
              "commercial": false,
              "emits_event": {},
              "documentation": {
                "inputs": {
                  "payload": {
                    "desc": "This port takes any JSON-like object."
                  }
                },
                "outputs": {
                  "error": {
                    "desc": "This port returns error if appending was not successful."
                  },
                  "payload": {
                    "desc": "This port returns given payload with traits appended or removed according to configuration."
                  }
                },
                "tutorial": null
              }
            }
          },
          "type": "flowNode",
          "position": {
            "x": 32.0,
            "y": 232.1666717529297
          }
        }
      ]
    },
    "timestamp": "2024-02-29T10:25:31",
    "wf_schema": {
      "uri": "http://www.tracardi.com/2021/WFSchema",
      "version": "0.9.0-rc2",
      "server_version": "0.9.0-rc4"
    },
    "description": "",
    "deploy_timestamp": null
  },
  "lock": false,
  "type": "collection"
}